% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ImprovedpreliminaryTest.R, R/Stein.R,
%   R/positiveStein.R, R/preliminaryTest.R, R/restricted.R, R/unrestricted.R
\name{fitted.improvedpreliminaryTest}
\alias{fitted.improvedpreliminaryTest}
\alias{fitted.stein}
\alias{fitted.positivestein}
\alias{fitted.preliminaryTest}
\alias{fitted.restricted}
\alias{fitted.unrestricted}
\title{Extract Model Fitted Values}
\usage{
\method{fitted}{improvedpreliminaryTest}(object, ...)

\method{fitted}{stein}(object, ...)

\method{fitted}{positivestein}(object, ...)

\method{fitted}{preliminaryTest}(object, ...)

\method{fitted}{restricted}(object, ...)

\method{fitted}{unrestricted}(object, ...)
}
\arguments{
\item{object}{An object of class "\code{unrestricted}", "\code{restricted}",
"\code{preliminaryTest}",
"\code{improvedpreliminaryTest}", "\code{stein}" and "\code{positivestein}".}

\item{...}{Other.}
}
\description{
\code{fitted} is a generic function that extracts fitted values from objects
 returned by the modeling functions. \code{fitted.values} is an alias for it.
}
\examples{
n_obs <- 100
p_vars <- 5
beta <- c(2, 1, 3, 0, 5)
simulated_data <- simdata(n = n_obs, p = p_vars, beta)
X <- simulated_data$X
y <- simulated_data$y
p <- ncol(X)
# H beta = h
H <- matrix(c(1, 1, -1, 0, 0, 1, 0, 1, 0, -1, 0, 0, 0, 1, 0), nrow = 3, ncol = p, byrow = TRUE)
h <- rep(0, nrow(H))
model <- improvedpreliminaryTest(X, y, H, h, alpha = 0.05)
fitted(model)
n_obs <- 100
p_vars <- 5
beta <- c(2, 1, 3, 0, 5)
simulated_data <- simdata(n = n_obs, p = p_vars, beta)
X <- simulated_data$X
y <- simulated_data$y
p <- ncol(X)
# H beta = h
H <- matrix(c(1, 1, -1, 0, 0, 1, 0, 1, 0, -1, 0, 0, 0, 1, 0), nr = 3, nc = p, byrow = TRUE)
h <- rep(0, nrow(H))
model <- stein(X, y, H, h)
fitted(model)
n_obs <- 100
p_vars <- 5
beta <- c(2, 1, 3, 0, 5)
simulated_data <- simdata(n = n_obs, p = p_vars, beta)
X <- simulated_data$X
y <- simulated_data$y
p <- ncol(X)
# H beta = h
H <- matrix(c(1, 1, -1, 0, 0, 1, 0, 1, 0, -1, 0, 0, 0, 1, 0), nrow = 3, ncol = p, byrow = TRUE)
h <- rep(0, nrow(H))
model <- positivestein(X, y, H, h)
fitted(model)
n_obs <- 100
p_vars <- 5
beta <- c(2, 1, 3, 0, 5)
simulated_data <- simdata(n = n_obs, p = p_vars, beta)
X <- simulated_data$X
y <- simulated_data$y
p <- ncol(X)
# H beta = h
H <- matrix(c(1, 1, -1, 0, 0, 1, 0, 1, 0, -1, 0, 0, 0, 1, 0), nrow = 3, ncol = p, byrow = TRUE)
h <- rep(0, nrow(H))
model <- preliminaryTest(X, y, H, h, alpha = 0.05)
fitted(model)
n_obs <- 100
p_vars <- 5
beta <- c(2, 1, 3, 0, 5)
simulated_data <- simdata(n = n_obs, p = p_vars, beta)
X <- simulated_data$X
y <- simulated_data$y
p <- ncol(X)
# H beta = h
H <- matrix(c(1, 1, -1, 0, 0, 1, 0, 1, 0, -1, 0, 0, 0, 1, 0), nrow = 3, ncol = p, byrow = TRUE)
h <- rep(0, nrow(H))
model <- restricted(X, y, H, h)
fitted(model)
n_obs <- 100
p_vars <- 5
beta <- c(2, 1, 3, 0, 5)
simulated_data <- simdata(n = n_obs, p = p_vars, beta)
X <- simulated_data$X
y <- simulated_data$y
model <- unrestricted(X, y)
fitted(model)
}
\seealso{
#' \code{\link{fitted.unrestricted}}, \code{\link{fitted.restricted}},
\code{\link{fitted.preliminaryTest}},\code{\link{fitted.improvedpreliminaryTest}},
\code{\link{fitted.stein}}, \code{\link{fitted.positivestein}}
}
