% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ImprovedpreliminaryTest.R, R/Stein.R,
%   R/positiveStein.R, R/preliminaryTest.R, R/restricted.R, R/unrestricted.R
\name{residuals.improvedpreliminaryTest}
\alias{residuals.improvedpreliminaryTest}
\alias{residuals.stein}
\alias{residuals.positivestein}
\alias{residuals.preliminaryTest}
\alias{residuals.restricted}
\alias{residuals.unrestricted}
\title{residuals method for Model Fits}
\usage{
\method{residuals}{improvedpreliminaryTest}(object, ...)

\method{residuals}{stein}(object, ...)

\method{residuals}{positivestein}(object, ...)

\method{residuals}{preliminaryTest}(object, ...)

\method{residuals}{restricted}(object, ...)

\method{residuals}{unrestricted}(object, ...)
}
\arguments{
\item{object}{An object of class "\code{positivestein}", "\code{preliminaryTest}",
"\code{restricted}", "\code{stein}", "\code{unrestricted}" or "\code{improvedpreliminaryTest}".}

\item{...}{Other.}
}
\description{
\code{residuals} is a generica function that returns the residual values based on the respective model.
}
\examples{
n_obs <- 100
p_vars <- 5
beta <- c(2, 1, 3, 0, 5)
simulated_data <- simdata(n = n_obs, p = p_vars, beta)
X <- simulated_data$X
y <- simulated_data$y
p <- ncol(X)
# H beta = h
H <- matrix(c(1, 1, -1, 0, 0, 1, 0, 1, 0, -1, 0, 0, 0, 1, 0), nrow = 3, ncol = p, byrow = TRUE)
h <- rep(0, nrow(H))
model <- improvedpreliminaryTest(X, y, H, h, alpha = 0.05)
residuals(model)
n_obs <- 100
p_vars <- 5
beta <- c(2, 1, 3, 0, 5)
simulated_data <- simdata(n = n_obs, p = p_vars, beta)
X <- simulated_data$X
y <- simulated_data$y
p <- ncol(X)
# H beta = h
H <- matrix(c(1, 1, -1, 0, 0, 1, 0, 1, 0, -1, 0, 0, 0, 1, 0), nr = 3, nc = p, byrow = TRUE)
h <- rep(0, nrow(H))
model <- stein(X, y, H, h)
residuals(model)
n_obs <- 100
p_vars <- 5
beta <- c(2, 1, 3, 0, 5)
simulated_data <- simdata(n = n_obs, p = p_vars, beta)
X <- simulated_data$X
y <- simulated_data$y
p <- ncol(X)
# H beta = h
H <- matrix(c(1, 1, -1, 0, 0, 1, 0, 1, 0, -1, 0, 0, 0, 1, 0), nrow = 3, ncol = p, byrow = TRUE)
h <- rep(0, nrow(H))
model <- positivestein(X, y, H, h)
residuals(model)
n_obs <- 100
p_vars <- 5
beta <- c(2, 1, 3, 0, 5)
simulated_data <- simdata(n = n_obs, p = p_vars, beta)
X <- simulated_data$X
y <- simulated_data$y
p <- ncol(X)
# H beta = h
H <- matrix(c(1, 1, -1, 0, 0, 1, 0, 1, 0, -1, 0, 0, 0, 1, 0), nrow = 3, ncol = p, byrow = TRUE)
h <- rep(0, nrow(H))
model <- preliminaryTest(X, y, H, h, alpha = 0.05)
residuals(model)
n_obs <- 100
p_vars <- 5
beta <- c(2, 1, 3, 0, 5)
simulated_data <- simdata(n = n_obs, p = p_vars, beta)
X <- simulated_data$X
y <- simulated_data$y
p <- ncol(X)
# H beta = h
H <- matrix(c(1, 1, -1, 0, 0, 1, 0, 1, 0, -1, 0, 0, 0, 1, 0), nrow = 3, ncol = p, byrow = TRUE)
h <- rep(0, nrow(H))
model <- restricted(X, y, H, h)
residuals(model)
n_obs <- 100
p_vars <- 5
beta <- c(2, 1, 3, 0, 5)
simulated_data <- simdata(n = n_obs, p = p_vars, beta)
X <- simulated_data$X
y <- simulated_data$y
model <- unrestricted(X, y)
residuals(model)
}
\seealso{
\code{\link{residuals.positivestein}}, \code{\link{residuals.preliminaryTest}},
\code{\link{residuals.restricted}}, \code{\link{residuals.stein}},
\code{\link{residuals.unrestricted}}, \code{\link{residuals.improvedpreliminaryTest}}.
}
